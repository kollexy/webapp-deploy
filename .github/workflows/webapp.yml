name: Build and Deploy Web App
on:
  push:
    branches:
    - main

jobs:
  terraform-deploy-infra:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      run: cd infra-deploy && terraform init
      # env:
    - name: Terraform Plan
      run: cd infra-deploy && terraform plan
      # env:
    - name: Terraform Apply
      run: cd infra-deploy && terraform apply -auto-approve
 
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: terraform-deploy-infra

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: clone app
      run: git clone https://github.com/Azure-Samples/msdocs-python-flask-webapp-quickstart
           

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Set up virtual environment
      run: |
            python3 -m venv .venv
      working-directory: msdocs-python-flask-webapp-quickstart
    
    - name: Install dependencies
      run: |
          source .venv/bin/activate
          pip install -r requirements.txt
      working-directory: msdocs-python-flask-webapp-quickstart  

    # - name: Login to Azure
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}


    - name: Install Azure CLI
      run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Log in to Azure
      env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        echo "$AZURE_CREDENTIALS" > azure_credentials.json
         az login --service-principal --username "$(jq -r .clientId azure_credentials.json)" \
                    --password "$(jq -r .clientSecret azure_credentials.json)" \
                    --tenant "$(jq -r .tenantId azure_credentials.json)"
          rm azure_credentials.json

    - name: Set Azure Subscription
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get Azure Subscriptions
      run: |
          az account list
          az account show

    - name: Get Publish Profile
      id: get_publish_profile
      run: |
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        az webapp deployment list-publishing-profiles --name test-web-appservice --resource-group test-web-app --query "[0].publishingProfile" -o tsv > publishProfile
        base64 -w 0 publishProfile > publishProfileBase64

    - name: Set Publish Profile Secret
      run: echo "AZURE_WEBAPP_PUBLISH_PROFILE=$(cat publishProfileBase64)" >> $GITHUB_ENV

    - name: Archive app

      run: zip -r myapp.zip .

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: test-web-app
        slot-name: production
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}




