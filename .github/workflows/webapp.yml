name: Build and Deploy Web App
on:
  push:
    branches:
    - main1

jobs:
  terraform-deploy-infra:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      run: cd aks && terraform init
      # env:
    - name: Terraform Plan
      #   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      #   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      #   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      #   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      run: cd aks && terraform plan
      # env:
    - name: Terraform Apply
      #   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      #   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      #   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      #   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      run: cd aks && terraform apply -auto-approve
      # env:
  #   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}


  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get Publish Profile
      id: get_publish_profile
      run: |
        az account set --subscription ${AZURE_SUBSCRIPTION_ID}
        az webapp deployment list-publishing-profiles --name test-web-app --resource-group test-web-app --query "[0].publishingProfile" -o tsv > publishProfile
        base64 -w 0 publishProfile > publishProfileBase64

    - name: Set Publish Profile Secret
      run: echo "AZURE_WEBAPP_PUBLISH_PROFILE=$(cat publishProfileBase64)" >> $GITHUB_ENV

    - name: Archive app

      run: zip -r myapp.zip .

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: test-web-app
        slot-name: production
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}





